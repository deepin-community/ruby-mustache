#########################################################
# This file has been automatically generated by gem2tgz #
#########################################################
# -*- encoding: utf-8 -*-
# stub: mustache 1.1.1 ruby lib

Gem::Specification.new do |s|
  s.name = "mustache".freeze
  s.version = "1.1.1"

  s.required_rubygems_version = Gem::Requirement.new(">= 0".freeze) if s.respond_to? :required_rubygems_version=
  s.require_paths = ["lib".freeze]
  s.authors = ["Chris Wanstrath".freeze, "Magnus Holm".freeze, "Pieter van de Bruggen".freeze, "Ricardo Mendes".freeze]
  s.date = "2019-12-03"
  s.description = "Inspired by ctemplate, Mustache is a framework-agnostic way to render\nlogic-free views.\n\nAs ctemplates says, \"It emphasizes separating logic from presentation:\nit is impossible to embed application logic in this template\nlanguage.\n\nThink of Mustache as a replacement for your views. Instead of views\nconsisting of ERB or HAML with random helpers and arbitrary logic,\nyour views are broken into two parts: a Ruby class and an HTML\ntemplate.\n".freeze
  s.email = "rokusu@gmail.com".freeze
  s.executables = ["mustache".freeze]
  s.files = ["LICENSE".freeze, "README.md".freeze, "Rakefile".freeze, "bin/mustache".freeze, "lib/mustache.rb".freeze, "lib/mustache/context.rb".freeze, "lib/mustache/context_miss.rb".freeze, "lib/mustache/enumerable.rb".freeze, "lib/mustache/generator.rb".freeze, "lib/mustache/parser.rb".freeze, "lib/mustache/settings.rb".freeze, "lib/mustache/template.rb".freeze, "lib/mustache/utils.rb".freeze, "lib/mustache/version.rb".freeze, "man/mustache.1".freeze, "man/mustache.1.html".freeze, "man/mustache.1.ron".freeze, "man/mustache.5".freeze, "man/mustache.5.html".freeze, "man/mustache.5.ron".freeze, "test/autoloading_test.rb".freeze, "test/fixtures/comments.mustache".freeze, "test/fixtures/comments.rb".freeze, "test/fixtures/complex_view.mustache".freeze, "test/fixtures/complex_view.rb".freeze, "test/fixtures/crazy_recursive.mustache".freeze, "test/fixtures/crazy_recursive.rb".freeze, "test/fixtures/delimiters.mustache".freeze, "test/fixtures/delimiters.rb".freeze, "test/fixtures/dot_notation.mustache".freeze, "test/fixtures/dot_notation.rb".freeze, "test/fixtures/double_section.mustache".freeze, "test/fixtures/double_section.rb".freeze, "test/fixtures/escaped.mustache".freeze, "test/fixtures/escaped.rb".freeze, "test/fixtures/inner_partial.mustache".freeze, "test/fixtures/inner_partial.txt".freeze, "test/fixtures/inverted_section.mustache".freeze, "test/fixtures/inverted_section.rb".freeze, "test/fixtures/lambda.mustache".freeze, "test/fixtures/lambda.rb".freeze, "test/fixtures/liberal.mustache".freeze, "test/fixtures/liberal.rb".freeze, "test/fixtures/method_missing.rb".freeze, "test/fixtures/namespaced.mustache".freeze, "test/fixtures/namespaced.rb".freeze, "test/fixtures/nested_objects.mustache".freeze, "test/fixtures/nested_objects.rb".freeze, "test/fixtures/node.mustache".freeze, "test/fixtures/partial_with_module.mustache".freeze, "test/fixtures/partial_with_module.rb".freeze, "test/fixtures/passenger.conf".freeze, "test/fixtures/passenger.rb".freeze, "test/fixtures/recursive.mustache".freeze, "test/fixtures/recursive.rb".freeze, "test/fixtures/simple.mustache".freeze, "test/fixtures/simple.rb".freeze, "test/fixtures/simply_complicated.mustache".freeze, "test/fixtures/template_partial.mustache".freeze, "test/fixtures/template_partial.rb".freeze, "test/fixtures/template_partial.txt".freeze, "test/fixtures/unescaped.mustache".freeze, "test/fixtures/unescaped.rb".freeze, "test/fixtures/utf8.mustache".freeze, "test/fixtures/utf8_partial.mustache".freeze, "test/helper.rb".freeze, "test/mustache_test.rb".freeze, "test/parser_test.rb".freeze, "test/partial_test.rb".freeze, "test/spec_test.rb".freeze, "test/template_test.rb".freeze]
  s.homepage = "https://github.com/mustache/mustache".freeze
  s.licenses = ["MIT".freeze]
  s.required_ruby_version = Gem::Requirement.new(">= 2.0".freeze)
  s.rubygems_version = "2.5.2.1".freeze
  s.summary = "Mustache is a framework-agnostic way to render logic-free views.".freeze

  if s.respond_to? :specification_version then
    s.specification_version = 4

    if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then
      s.add_development_dependency(%q<benchmark-ips>.freeze, [">= 0"])
      s.add_development_dependency(%q<bundler>.freeze, ["~> 1.6"])
      s.add_development_dependency(%q<minitest>.freeze, ["~> 5.4"])
      s.add_development_dependency(%q<rake>.freeze, ["~> 10.3"])
      s.add_development_dependency(%q<rdoc>.freeze, ["~> 4.1"])
      s.add_development_dependency(%q<ronn>.freeze, ["~> 0.7"])
      s.add_development_dependency(%q<ruby-prof>.freeze, [">= 0"])
    else
      s.add_dependency(%q<benchmark-ips>.freeze, [">= 0"])
      s.add_dependency(%q<bundler>.freeze, ["~> 1.6"])
      s.add_dependency(%q<minitest>.freeze, ["~> 5.4"])
      s.add_dependency(%q<rake>.freeze, ["~> 10.3"])
      s.add_dependency(%q<rdoc>.freeze, ["~> 4.1"])
      s.add_dependency(%q<ronn>.freeze, ["~> 0.7"])
      s.add_dependency(%q<ruby-prof>.freeze, [">= 0"])
    end
  else
    s.add_dependency(%q<benchmark-ips>.freeze, [">= 0"])
    s.add_dependency(%q<bundler>.freeze, ["~> 1.6"])
    s.add_dependency(%q<minitest>.freeze, ["~> 5.4"])
    s.add_dependency(%q<rake>.freeze, ["~> 10.3"])
    s.add_dependency(%q<rdoc>.freeze, ["~> 4.1"])
    s.add_dependency(%q<ronn>.freeze, ["~> 0.7"])
    s.add_dependency(%q<ruby-prof>.freeze, [">= 0"])
  end
end
